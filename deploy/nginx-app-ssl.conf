# nginx-app.conf

# the upstream component nginx needs to connect to
upstream django {
    server unix:///home/docker/code/app.sock; # for a file socket
    # server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}

# http redirect
server {
    listen 80 default_server;

    # Set your own server name!
    server_name hacktheprinter.net;

    root /dev/null;

    # User-Agent block
    if ( $http_user_agent ~* "Windows 95|Windows 98|wget|curl|libwww-perl|Jorgee" ) {
	    return 403;
    }

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$server_name$request_uri;

}

# https proxy pass
server {
    listen 443 ssl http2;

    # Set your own server name!
    server_name hacktheprinter.net;
    charset     utf-8;

    # max upload size
    client_max_body_size 1M;   # adjust to taste

    root /dev/null;

	##
	# SSL config
	##
	
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	
	# Diffie-Hellman parameter for DHE ciphersuites, recommended 4096 bits
	ssl_dhparam /etc/nginx/dhparams.pem;

	# Secure config
	ssl_protocols TLSv1.1 TLSv1.2;
	ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:!DSS';
	ssl_ecdh_curve secp521r1:secp384r1:prime256v1;
	ssl_prefer_server_ciphers on;

	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
	add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload;" always;
	add_header Content-Security-Policy "default-src 'self';" always;
	add_header X-Frame-Options "SAMEORIGIN" always;
	add_header X-Content-Type-Options "nosniff" always;
	add_header X-Xss-Protection "1; mode=block" always;
	add_header Referrer-Policy "same-origin" always;

	# OCSP Stapling ---
	# fetch OCSP records from URL in ssl_certificate and cache them
	ssl_stapling on;
	ssl_stapling_verify on;
	## verify chain of trust of OCSP response using Root CA and Intermediate certs
	# resolver google valid=3600s ipv6=off;
	resolver 8.8.8.8 8.8.4.4 valid=300s ipv6=off;
	resolver_timeout 10s;
	
    ssl_certificate         /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key     /etc/nginx/certs/privkey.pem;
    ssl_trusted_certificate /etc/nginx/certs/letsencrypt.pem;

    keepalive_timeout 10 10;

    # User-Agent block
    if ( $http_user_agent ~* "Windows 95|Windows 98|wget|curl|libwww-perl|Jorgee" ) {
	    return 403;
    }

    # Django media
    location /media  {
        alias /home/docker/persistent/media;  # your Django project's media files - amend as required
    }

    location /static {
        alias /home/docker/volatile/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /home/docker/code/uwsgi_params; # the uwsgi_params file you installed
    }
}
# END app
